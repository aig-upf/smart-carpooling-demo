//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.16 at 05:58:11 PM CET 
//


package eu.fbk.das.adaptation.ensemble;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the eu.fbk.das.adaptation.ensemble package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Annotations_QNAME = new QName("http://das.fbk.eu/Annotation", "annotations");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: eu.fbk.das.adaptation.ensemble
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DomainObject }
     * 
     */
    public DomainObject createDomainObject() {
        return new DomainObject();
    }

    /**
     * Create an instance of {@link eu.fbk.das.adaptation.ensemble.Fragment }
     * 
     */
    public eu.fbk.das.adaptation.ensemble.Fragment createFragment() {
        return new eu.fbk.das.adaptation.ensemble.Fragment();
    }

    /**
     * Create an instance of {@link ClauseType }
     * 
     */
    public ClauseType createClauseType() {
        return new ClauseType();
    }

    /**
     * Create an instance of {@link ClauseType.Point }
     * 
     */
    public ClauseType.Point createClauseTypePoint() {
        return new ClauseType.Point();
    }

    /**
     * Create an instance of {@link EffectType }
     * 
     */
    public EffectType createEffectType() {
        return new EffectType();
    }

    /**
     * Create an instance of {@link eu.fbk.das.adaptation.ensemble.Fragment.Transition }
     * 
     */
    public eu.fbk.das.adaptation.ensemble.Fragment.Transition createFragmentTransition() {
        return new eu.fbk.das.adaptation.ensemble.Fragment.Transition();
    }

    /**
     * Create an instance of {@link WhileType }
     * 
     */
    public WhileType createWhileType() {
        return new WhileType();
    }

    /**
     * Create an instance of {@link PickType }
     * 
     */
    public PickType createPickType() {
        return new PickType();
    }

    /**
     * Create an instance of {@link SwitchType }
     * 
     */
    public SwitchType createSwitchType() {
        return new SwitchType();
    }

    /**
     * Create an instance of {@link SwitchType.Default }
     * 
     */
    public SwitchType.Default createSwitchTypeDefault() {
        return new SwitchType.Default();
    }

    /**
     * Create an instance of {@link SwitchType.If }
     * 
     */
    public SwitchType.If createSwitchTypeIf() {
        return new SwitchType.If();
    }

    /**
     * Create an instance of {@link DomainObject.DomainKnowledge }
     * 
     */
    public DomainObject.DomainKnowledge createDomainObjectDomainKnowledge() {
        return new DomainObject.DomainKnowledge();
    }

    /**
     * Create an instance of {@link Ensemble }
     * 
     */
    public Ensemble createEnsemble() {
        return new Ensemble();
    }

    /**
     * Create an instance of {@link Role }
     * 
     */
    public Role createRole() {
        return new Role();
    }

    /**
     * Create an instance of {@link Solver }
     * 
     */
    public Solver createSolver() {
        return new Solver();
    }

    /**
     * Create an instance of {@link Issue }
     * 
     */
    public Issue createIssue() {
        return new Issue();
    }

    /**
     * Create an instance of {@link Solution }
     * 
     */
    public Solution createSolution() {
        return new Solution();
    }

    /**
     * Create an instance of {@link DomainObject.Process }
     * 
     */
    public DomainObject.Process createDomainObjectProcess() {
        return new DomainObject.Process();
    }

    /**
     * Create an instance of {@link DomainObject.Fragment }
     * 
     */
    public DomainObject.Fragment createDomainObjectFragment() {
        return new DomainObject.Fragment();
    }

    /**
     * Create an instance of {@link DomainObject.RobustnessAnnotation }
     * 
     */
    public DomainObject.RobustnessAnnotation createDomainObjectRobustnessAnnotation() {
        return new DomainObject.RobustnessAnnotation();
    }

    /**
     * Create an instance of {@link eu.fbk.das.adaptation.ensemble.Process }
     * 
     */
    public eu.fbk.das.adaptation.ensemble.Process createProcess() {
        return new eu.fbk.das.adaptation.ensemble.Process();
    }

    /**
     * Create an instance of {@link AbstractType }
     * 
     */
    public AbstractType createAbstractType() {
        return new AbstractType();
    }

    /**
     * Create an instance of {@link ConcreteType }
     * 
     */
    public ConcreteType createConcreteType() {
        return new ConcreteType();
    }

    /**
     * Create an instance of {@link ReceiveType }
     * 
     */
    public ReceiveType createReceiveType() {
        return new ReceiveType();
    }

    /**
     * Create an instance of {@link InvokeType }
     * 
     */
    public InvokeType createInvokeType() {
        return new InvokeType();
    }

    /**
     * Create an instance of {@link eu.fbk.das.adaptation.ensemble.Fragment.State }
     * 
     */
    public eu.fbk.das.adaptation.ensemble.Fragment.State createFragmentState() {
        return new eu.fbk.das.adaptation.ensemble.Fragment.State();
    }

    /**
     * Create an instance of {@link eu.fbk.das.adaptation.ensemble.Fragment.Action }
     * 
     */
    public eu.fbk.das.adaptation.ensemble.Fragment.Action createFragmentAction() {
        return new eu.fbk.das.adaptation.ensemble.Fragment.Action();
    }

    /**
     * Create an instance of {@link ServiceActionType }
     * 
     */
    public ServiceActionType createServiceActionType() {
        return new ServiceActionType();
    }

    /**
     * Create an instance of {@link ServiceStateType }
     * 
     */
    public ServiceStateType createServiceStateType() {
        return new ServiceStateType();
    }

    /**
     * Create an instance of {@link AnnotationListType }
     * 
     */
    public AnnotationListType createAnnotationListType() {
        return new AnnotationListType();
    }

    /**
     * Create an instance of {@link PreconditionType }
     * 
     */
    public PreconditionType createPreconditionType() {
        return new PreconditionType();
    }

    /**
     * Create an instance of {@link GoalType }
     * 
     */
    public GoalType createGoalType() {
        return new GoalType();
    }

    /**
     * Create an instance of {@link CompensationType }
     * 
     */
    public CompensationType createCompensationType() {
        return new CompensationType();
    }

    /**
     * Create an instance of {@link ClauseType.Point.DomainProperty }
     * 
     */
    public ClauseType.Point.DomainProperty createClauseTypePointDomainProperty() {
        return new ClauseType.Point.DomainProperty();
    }

    /**
     * Create an instance of {@link EffectType.Event }
     * 
     */
    public EffectType.Event createEffectTypeEvent() {
        return new EffectType.Event();
    }

    /**
     * Create an instance of {@link eu.fbk.das.adaptation.ensemble.Fragment.Transition.Action }
     * 
     */
    public eu.fbk.das.adaptation.ensemble.Fragment.Transition.Action createFragmentTransitionAction() {
        return new eu.fbk.das.adaptation.ensemble.Fragment.Transition.Action();
    }

    /**
     * Create an instance of {@link WhileType.VarCondition }
     * 
     */
    public WhileType.VarCondition createWhileTypeVarCondition() {
        return new WhileType.VarCondition();
    }

    /**
     * Create an instance of {@link PickType.OnMessage }
     * 
     */
    public PickType.OnMessage createPickTypeOnMessage() {
        return new PickType.OnMessage();
    }

    /**
     * Create an instance of {@link SwitchType.Default.Branch }
     * 
     */
    public SwitchType.Default.Branch createSwitchTypeDefaultBranch() {
        return new SwitchType.Default.Branch();
    }

    /**
     * Create an instance of {@link SwitchType.If.VarCondition }
     * 
     */
    public SwitchType.If.VarCondition createSwitchTypeIfVarCondition() {
        return new SwitchType.If.VarCondition();
    }

    /**
     * Create an instance of {@link SwitchType.If.Branch }
     * 
     */
    public SwitchType.If.Branch createSwitchTypeIfBranch() {
        return new SwitchType.If.Branch();
    }

    /**
     * Create an instance of {@link DomainObject.DomainKnowledge.InternalDomainProperty }
     * 
     */
    public DomainObject.DomainKnowledge.InternalDomainProperty createDomainObjectDomainKnowledgeInternalDomainProperty() {
        return new DomainObject.DomainKnowledge.InternalDomainProperty();
    }

    /**
     * Create an instance of {@link DomainObject.DomainKnowledge.ExternalDomainProperty }
     * 
     */
    public DomainObject.DomainKnowledge.ExternalDomainProperty createDomainObjectDomainKnowledgeExternalDomainProperty() {
        return new DomainObject.DomainKnowledge.ExternalDomainProperty();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AnnotationListType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://das.fbk.eu/Annotation", name = "annotations")
    public JAXBElement<AnnotationListType> createAnnotations(AnnotationListType value) {
        return new JAXBElement<AnnotationListType>(_Annotations_QNAME, AnnotationListType.class, null, value);
    }

}
